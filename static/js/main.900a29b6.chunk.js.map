{"version":3,"sources":["atoms.tsx","components/CreateCustomCategory.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","categoryState","atom","key","default","TO_DO","customCategoryState","JSON","parse","localStorage","getItem","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","CreateCustomCategory","setCustomCategory","useSetRecoilState","useForm","register","handleSubmit","setValue","onSubmit","customCategory","title","id","Date","now","placeholder","className","CreateToDo","setToDos","useRecoilValue","oldToDos","text","required","ToDo","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","DOING","DONE","ToDoList","allToDos","useRecoilState","setCategory","customCategoryList","useEffect","setItem","stringify","value","onInput","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.900a29b6.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport interface ICustomCategory {\n  title: string;\n  id: number;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const customCategoryState = atom<ICustomCategory[]>({\n  key: \"customCategory\",\n  default: JSON.parse(localStorage.getItem(\"CUSTOMCATEGORY\") || \"[]\"),\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: JSON.parse(localStorage.getItem(\"TODOS\") || \"[]\"),\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useSetRecoilState } from \"recoil\";\nimport { customCategoryState } from \"../atoms\";\n\ninterface IForm {\n  customCategory: string;\n}\n\nfunction CreateCustomCategory() {\n  const setCustomCategory = useSetRecoilState(customCategoryState);\n  const { register, handleSubmit, setValue } = useForm();\n  const onValid = ({ customCategory }: IForm) => {\n    setCustomCategory((Categories) => [\n      { title: customCategory, id: Date.now() },\n      ...Categories,\n    ]);\n    setValue(\"customCategory\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(onValid)}>\n      <input {...register(\"customCategory\")} placeholder=\"Write a Category\" />\n      <button>\n        <i className=\"fas fa-plus-square\">Add</i>\n      </button>\n    </form>\n  );\n}\n\nexport default CreateCustomCategory;\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = { text, id, category: name as any };\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO && (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          To Do\n        </button>\n      )}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onClick}>\n          Done\n        </button>\n      )}\n    </li>\n  );\n}\n\nexport default ToDo;\n","import React, { useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  Categories,\n  categoryState,\n  customCategoryState,\n  toDoSelector,\n  toDoState,\n} from \"../atoms\";\nimport CreateCustomCategory from \"./CreateCustomCategory\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const allToDos = useRecoilValue(toDoState);\n  const [category, setCategory] = useRecoilState(categoryState);\n  const customCategoryList = useRecoilValue(customCategoryState);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"TODOS\", JSON.stringify(allToDos));\n  }, [allToDos]);\n  useEffect(() => {\n    localStorage.setItem(\"CUSTOMCATEGORY\", JSON.stringify(customCategoryList));\n  }, [customCategoryList]);\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <hr />\n      <select value={category} onInput={onInput}>\n        <option value={Categories.TO_DO}>To Do</option>\n        <option value={Categories.DOING}>Doing</option>\n        <option value={Categories.DONE}>Done</option>\n        {customCategoryList.map((customCategory) => (\n          <option key={customCategory.id} value={customCategory.title}>\n            {customCategory.title}\n          </option>\n        ))}\n      </select>\n      <CreateCustomCategory />\n      <hr />\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}